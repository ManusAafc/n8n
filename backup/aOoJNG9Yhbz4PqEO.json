{
  "createdAt": "2025-02-02T23:54:57.921Z",
  "updatedAt": "2025-02-06T11:36:43.688Z",
  "id": "aOoJNG9Yhbz4PqEO",
  "name": "Siscad DB AI Memory Buffer Mono Table",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -1840,
        -780
      ],
      "id": "e5244836-3908-48b7-9de6-72acf4e28873",
      "name": "When chat message received",
      "webhookId": "f8863e93-22d2-419d-88f1-45412169df43"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "757c1e74-7caa-40f9-ae01-aa7838367742",
              "name": "tables",
              "value": "['v_members', 'v_plans', 'v_cities', 'v_regions']",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1400,
        -680
      ],
      "id": "0d054fcf-129a-4208-9a35-eff36b668ea0",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -1200,
        -480
      ],
      "id": "99acc326-7fb8-4e1f-aa1b-6348df8f806f",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "PoOUQmpuFM2NB1Ey",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "{{ $json.text }}",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -860,
        -680
      ],
      "id": "3449de01-2df2-4538-a629-11e6092c3996",
      "name": "EXECUTE QUERY EXTRACT SCHEMA",
      "credentials": {
        "postgres": {
          "id": "0jbSkyl6xEUSAesd",
          "name": "SB SisCad"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return {\n  schema: JSON.stringify($('EXECUTE QUERY EXTRACT SCHEMA').all())\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -640,
        -680
      ],
      "id": "b3ed5c7e-0e7f-4623-87c2-49d446c24a2a",
      "name": "PREPARE SCHEMA DBS"
    },
    {
      "parameters": {
        "modelName": "models/gemini-1.0-pro-001",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -420,
        -500
      ],
      "id": "662122f9-f623-47f2-bd4a-0593dfbc0165",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "PoOUQmpuFM2NB1Ey",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "{{ $json.result }}",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        160,
        -680
      ],
      "id": "0adfc3d8-e51a-4170-89f2-c274cbee1b2a",
      "name": "EXECUTE QUERY TO EXTRACT INFORMATION",
      "credentials": {
        "postgres": {
          "id": "0jbSkyl6xEUSAesd",
          "name": "SB SisCad"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const query =  $input.first().json.text // Certifique-se de que 'query' é o nome do campo de entrada\nconst match = query.match(/```sql\\n([\\s\\S]*?)\\n```/);\nreturn [{ json: { result: match ? match[1].trim() : query.trim() } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -60,
        -680
      ],
      "id": "61ce43e9-213a-485e-b48b-624c7dc6b0c2",
      "name": "Code"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Dado as tabelas a seguir, preciso que você altere a query para utilizada para extrair o schema do banco somente para as tabelas informadas.\n\nTABELAS\n{{ $json.tables }}\n\n### QUERY A SER ALTERADA\nSELECT table_name, column_name, data_type  \nFROM information_schema.columns  \nWHERE table_schema = 'public'  \nAND table_name in ()  \nORDER BY table_name, ordinal_position;\n\n### O QUE FAZER\n1. RETORNAR APENAS A QUERY FINAL\n2. GARANTIR QUE O RETORNO VAI SER EXECUTADO PELO DB COM SUCESSO\n\n### O QUE NÃO FAZER\n1. INCLUIR EXPLICAÇÃO OU OPINIÃO\n2. NÃO INCLUIR EM BLOCO DE CÓDIGO COMO POR EXEMPLO \"```sql\"\n"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        -1220,
        -680
      ],
      "id": "62b53246-47ae-4f90-ab35-e0d52eeb9621",
      "name": "EXTRACT SCHEMA DBS"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('When chat message received').last().json.chatInput }}",
        "messages": {
          "messageValues": [
            {
              "message": "=Você agora é um DBA experiente em montar queries para extrair as informações do banco solicitadas pelo usuário.\n\nPreciso que você analise a solicitação do usuário e utilizando o schema predefinido elabore a query para extrair as informações desejadas.\n\n### SCHEMA DISPONÍVEL\n{{ $json.schema }}\n\n### O QUE VOCÊ DEVE FAZER\n1. RETORNAR APENAS A QUERY FINAL;\n2. GARANTIR QUE O RETORNO VAI SER EXECUTADO PELO DB COM SUCESSO;\n3. SEMPRE UTILIZE ILIKE PARA OS CAMPOS VARCHAR, CHAR, STRING, TEXT;\n4. Remova TODOS e quaisquer caracteres antes e depois da query, deixando apenas o código SQL puro como no exemplo abaixo:\n\"SELECT COUNT(*) AS total FROM table_name;\"\n\n### CONSIDERACÔES PARA A CRIACAO DE UMA SQL CORRETA:\n1. SITUACAO DOS SOCIOS:\n  1.1. Sócios ativos equivale status_id = '2';\n  1.2. Sócios inativos equivale status_id = '1';\n\n2. INFORMACOES:\n  2.1 TODAS AS INFORMACOES ESTAO CONTIDAS NA TABELA INFORMADA;\n\n3. PLANOS DOS SOCIOS:\n  3.1 Plano especial equivale plan_id = '1';\n  3.2 Plano normal equivale plan_id = '2';\n  3.3 Plano inss equivale plan_id = '3';\n  3.4 Plano contribuinte equivale plan_id = '4';\n  3.5 Plano ipe equivale plan_id = '5';\n\n4. RELACAO ENTRE TABELAS:\n  4.1 Utilizar os nomes dos campos originais das tabelas quando possivel;\n  4.2 NAO DEVERA SER REALIZADA NENHUM RELACIONAMENTO COM OUTRAS TABELAS;\n"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        -440,
        -680
      ],
      "id": "b7c79fbc-f2a5-4e07-923a-c128e08bf37d",
      "name": "GENERATE QUERY TO EXTRACT DBS"
    },
    {
      "parameters": {
        "agent": "conversationalAgent",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -1680,
        -780
      ],
      "id": "20ff0aa8-0a9f-474d-a793-d7b11ef7e5b7",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "modelName": "models/gemini-1.0-pro-001",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -1640,
        -580
      ],
      "id": "e4d992be-b2d3-4c99-84c3-ca34290b016b",
      "name": "Google Gemini Chat Model2",
      "credentials": {
        "googlePalmApi": {
          "id": "PoOUQmpuFM2NB1Ey",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.4,
      "position": [
        -1540,
        -520
      ],
      "id": "5c358125-d708-43ed-9ef7-20428cb6e869",
      "name": "Redis Chat Memory",
      "credentials": {
        "redis": {
          "id": "JEn3xQXNWgHoobdf",
          "name": "Redis Chat Memory"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-1.0-pro-001",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        240,
        -160
      ],
      "id": "83ad6fb6-aab9-4656-b512-8398c65dadb1",
      "name": "Google Gemini Chat Model3",
      "credentials": {
        "googlePalmApi": {
          "id": "PoOUQmpuFM2NB1Ey",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=### UTILIZAR AS INFORMAÇOES ABAIXO\n\n{{ JSON.stringify($('EXECUTE QUERY TO EXTRACT INFORMATION').all())}}",
        "messages": {
          "messageValues": [
            {
              "message": "FORMATAR AS INFORMAÇÕES A SEGUIR DE MANEIRA APRESENTAVEL PARA O WHATSAPP BASEADO NA SOLICITACAO DO USUARIO."
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        140,
        -380
      ],
      "id": "e1c95f07-dea8-42ab-ba1b-73df4310ea6d",
      "name": "FORMAT ANSWER"
    }
  ],
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "EXTRACT SCHEMA DBS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "EXTRACT SCHEMA DBS",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "EXECUTE QUERY EXTRACT SCHEMA": {
      "main": [
        [
          {
            "node": "PREPARE SCHEMA DBS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PREPARE SCHEMA DBS": {
      "main": [
        [
          {
            "node": "GENERATE QUERY TO EXTRACT DBS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "GENERATE QUERY TO EXTRACT DBS",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "EXECUTE QUERY TO EXTRACT INFORMATION",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EXECUTE QUERY TO EXTRACT INFORMATION": {
      "main": [
        [
          {
            "node": "FORMAT ANSWER",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EXTRACT SCHEMA DBS": {
      "main": [
        [
          {
            "node": "EXECUTE QUERY EXTRACT SCHEMA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GENERATE QUERY TO EXTRACT DBS": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "FORMAT ANSWER",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "FORMAT ANSWER": {
      "main": [
        []
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "dfc4ad37-6235-4ca7-8662-211f953efa3b",
  "triggerCount": 0,
  "tags": []
}